names_from = c(company, group),
values_from = value
) %>%
arrange(
year
) %>%
clipr::write_clip()
pivot_wider(data = y,
id_cols = year,
names_from = c(company, group),
values_from = value
) %>%
arrange(
year
)
pivot_wider(data = y,
id_cols = c(year, company),
names_from = group
values_from = value
) %>%
arrange(
year
)
pivot_wider(data = y,
id_cols = c('year', 'company'),
names_from = group
values_from = value
) %>%
arrange(
year
)
pivot_wider(data = y,
id_cols = year:company,
names_from = group
values_from = value
) %>%
arrange(
year
)
pivot_wider(data = y,
id_cols = select(year, company),
names_from = group
values_from = value
) %>%
arrange(
year
)
pivot_wider(data = y,
id_cols = c(year, company),
names_from = group
values_from = value
)
pivot_wider(data = y,
id_cols = c(year, company),
names_from = group,
values_from = value
)
pivot_wider(data = y,
id_cols = c(year, company),
names_from = group,
values_from = value
) %>%
arrange(
year
)
pivot_wider(data = y,
id_cols = c(year),
names_from = group,
values_from = value
) %>%
arrange(
year
)
pivot_wider(data = y,
id_cols = c(year),
names_from = company,
values_from = value
) %>%
arrange(
year
)
pivot_wider(data = y,
id_cols = c(year),
names_from = group,
values_from = value
) %>%
arrange(
year
) %>%
View()
pivot_wider(data = y,
id_cols = year,
names_from = c(company, group),
values_from = value
) %>%
arrange(
year
)
pivot_wider(data = y,
id_cols = company,
names_from = c(group, year),
values_from = value
)
y <- x %>%
pivot_longer(
cols = `2021`:`2014`,
names_to = "year"
) %>%
select(
year,
company,
group,
value
) %>%
arrange(year)
pivot_wider(data = y,
id_cols = company,
names_from = c(group, year),
values_from = value
)
View(y)
y <- x %>%
pivot_longer(
cols = `2021`:`2014`,
names_to = "year"
) %>%
select(
year,
company,
group,
value
) %>%
arrange(company, year)
pivot_wider(data = y,
id_cols = company,
names_from = c(group, year),
values_from = value
)
y <- x %>%
pivot_longer(
cols = `2021`:`2014`,
names_to = "year"
) %>%
select(
year,
company,
group,
value
) %>%
arrange(company, group, year)
pivot_wider(data = y,
id_cols = company,
names_from = c(group, year),
values_from = value
)
pivot_wider(data = y,
id_cols = company,
names_from = c(group, year),
values_from = value
) %>%
View()
pivot_wider(data = y,
id_cols = company,
names_from = c(group, year),
values_from = value
) %>%
clipr::write_clip()
library(DatawRappr)
dw_basemaps
d <- dw_basemaps()
d <- dw_basemaps
View(d)
d <- dw_basemaps %>%
filter(
value = 'ZIP_CODE'
)
library(dplur)
library(dplyr)
d <- dw_basemaps %>%
filter(
value = 'ZIP_CODE'
)
d <- dw_basemaps %>%
filter(
value == 'ZIP_CODE'
)
d
d %>%
pull(slug)
d %>%
pull(slug) %>%
write.csv("./Desktop/zips.csv")
library(DatawRappr)
library(tidyverse)
dw_data_from_chart("RBDq1")
dw_data_from_chart("RBDq1") %>%
write_tsv("./Desktop/state.tsv")
?write_tsv
dw_data_from_chart("RBDq1") %>%
write_csv("./Desktop/states.csv", delim="\t")
?write_csv
dw_data_from_chart("RBDq1") %>%
write_csv("./Desktop/states.csv", delim="\t")
dw_data_from_chart("RBDq1") %>%
write_csv("./Desktop/states.csv")
dw_data_from_chart("RBDq1") %>%
write_delim("./Desktop/states.csv", delim="\t")
dw_data_from_chart("RBDq1") %>%
write_delim("./Desktop/states.csv")
read.csv("https://phl.carto.com/api/v2/sql?filename=covid_vaccine_totals&format=csv&skipfields=cartodb_id,the_geom,the_geom_webmercator&q=SELECT%20*%20FROM%20covid_vaccine_totals")
read.csv("https://phl.carto.com/api/v2/sql?filename=covid_vaccine_totals&format=csv&skipfields=cartodb_id,the_geom,the_geom_webmercator&q=SELECT * FROM covid_vaccine_totals")
read.csv("https://phl.carto.com/api/v2/sql?filename=covid_vaccine_totals&format=csv&skipfields=cartodb_id,the_geom,the_geom_webmercator&q=SELECT * FROM covid_vaccine_totals")
read.csv("https://phl.carto.com/api/v2/sql?filename=covid_vaccine_totals&format=csv&skipfields=cartodb_id,the_geom,the_geom_webmercator&q=SELECT * FROM covid_vaccine_totals")
read.csv("https://phl.carto.com/api/v2/sql?filename=covid_vaccine_totals&format=csv&skipfields=cartodb_id,the_geom,the_geom_webmercator&q=SELECT * FROM covid_vaccine_totals")
read.csv("https://phl.carto.com/api/v2/sql?filename=covid_vaccine_totals&format=csv&skipfields=cartodb_id,the_geom,the_geom_webmercator&q=SELECT * FROM covid_vaccine_totals")
read.csv("https://phl.carto.com/api/v2/sql?filename=covid_vaccine_totals&amp;format=csv&amp;skipfields=cartodb_id,the_geom,the_geom_webmercator&amp;q=SELECT * FROM covid_vaccine_totals")
install.packages("RSelenium")
install.packages("rvest")
library(RSelenium)
library(rvest)
library(tidyverse)
rD <- rsDriver(browser="firefox", port=4545L, verbose=F)
remDr <- rD[["client"]]
remDr$open
remDr$open()
remDr$navigate("https://www.fcc.gov/media/engineering/dtvmaps")
remDr$open()
library(dplyr)
library(RSelenium)
url <- 'https://results.philadelphiavotes.com/ResultsExport.aspx'
# TRY THIS FIRST
rD <- RSelenium::rsDriver(browser = "chrome")
# IF YOU GET AN ERROR SIMILIAR TO "Selenium message:session not created: This version of ChromeDriver only supports Chrome version 87"
# TRY THE SCRIPT BELOW WHICH WILL DOWNLOAD THE LATEST DRIVER
# WINDOWS VERSION
rD <- RSelenium::rsDriver(browser = "chrome",
chromever =
system2(command = "wmic",
args = 'datafile where name="C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe" get Version /value',
stdout = TRUE,
stderr = TRUE) %>%
stringr::str_extract(pattern = "(?<=Version=)\\d+\\.\\d+\\.\\d+\\.") %>%
magrittr::extract(!is.na(.)) %>%
stringr::str_replace_all(pattern = "\\.", replacement = "\\\\.") %>%
paste0("^",  .) %>%
stringr::str_subset(string = binman::list_versions(appname = "chromedriver") %>%
dplyr::last()) %>%
as.numeric_version() %>%
max() %>%
as.character()
)
remDr <- rD[['client']]
remDr$navigate(url)
remDR$open()
remDr$open()
library(dplyr)
library(RSelenium)
url <- 'https://www.livevoterturnout.com/BucksPA/LiveResults/en/Index_2.html'
# MAC VERSION
rD <- RSelenium::rsDriver(browser = "chrome",
chromever =
system2(command = "/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome",
args = "--version",
stdout = TRUE,
stderr = TRUE) %>%
stringr::str_extract(pattern = "(?<=Chrome )\\d+\\.\\d+\\.\\d+\\.") %>%
magrittr::extract(!is.na(.)) %>%
stringr::str_replace_all(pattern = "\\.",
replacement = "\\\\.") %>%
paste0("^",  .) %>%
stringr::str_subset(string =
binman::list_versions(appname = "chromedriver") %>%
dplyr::last()) %>%
as.numeric_version() %>%
max() %>%
as.character()
)
remDr <- rD[['client']]
remDr$navigate(url)
# install.packages("googlesheets4")
library(googlesheets4)
gs4_auth(
email = gargle::gargle_oauth_email(),
path = NULL,
scopes = "https://www.googleapis.com/auth/spreadsheets",
cache = gargle::gargle_oauth_cache(),
use_oob = gargle::gargle_oob_default(),
token = "../../../../../../Desktop/client_secret_281349124890-b8flcem7jt5isd6c6o340u93ml0fcj19.apps.googleusercontent.com.json"
)
gs4_auth(
email = gargle::gargle_oauth_email(),
path = NULL,
scopes = "https://www.googleapis.com/auth/spreadsheets",
cache = gargle::gargle_oauth_cache(),
use_oob = gargle::gargle_oob_default(),
token = "Desktop/client_secret_281349124890-b8flcem7jt5isd6c6o340u93ml0fcj19.apps.googleusercontent.com.json"
)
read_sheet("https://docs.google.com/spreadsheets/d/1y5dzvUFt_esSur820MTSp72-lp3IcGCIkou1p1-3ew0/edit#gid=0")
gs4_auth(
token = "Desktop/client_secret_281349124890-b8flcem7jt5isd6c6o340u93ml0fcj19.apps.googleusercontent.com.json"
)
read_sheet("https://docs.google.com/spreadsheets/d/1y5dzvUFt_esSur820MTSp72-lp3IcGCIkou1p1-3ew0/edit#gid=0")
drive_auth(path = "Desktop/client_secret_281349124890-b8flcem7jt5isd6c6o340u93ml0fcj19.apps.googleusercontent.com.json")
library(googledrive)
drive_auth(path = "Desktop/client_secret_281349124890-b8flcem7jt5isd6c6o340u93ml0fcj19.apps.googleusercontent.com.json")
drive_find(n_max = 30)
library(readxl)
library(dplyr)
library(readxl)
setwd("~/Documents/GitHub/templates/batch-datawrapper-generator")
file <- list.files(path="data/raw/", pattern="*.xlsx", full.names=TRUE, recursive=FALSE)
path <- list.files(path="data/raw/", pattern="*.xlsx", full.names=TRUE, recursive=FALSE)
raw <- read_excel(path)
?read_excel
excel_sheets(path)
lapply(excel_sheets(path), read_excel, path = path)
?lapply
processSheet <- function(sheet) {
print(sheet)
}
lapply(sheet_names, processSheet)
processSheet <- function(sheet) {
print(sheet$name)
}
lapply(sheet_names, processSheet)
sheet_names <- excel_sheets(path)
processSheet <- function(sheet) {
print(sheet)
}
lapply(sheet_names, processSheet)
processSheet <- function(name) {
sheet <- read_excel(path, name)
print(sheet)
}
lapply(sheet_names, processSheet)
processSheet <- function(name) {
sheet <- read_excel(path, name)
print(name)
print(sheet)
}
lapply(sheet_names, processSheet)
clear
lapply(sheet_names, processSheet)
processSheet <- function(name) {
if (!name %in% c("info", "raw")) {
sheet <- read_excel(path, name)
sheet$series_id = name
print(sheet)
}
}
lapply(sheet_names, processSheet)
processSheet <- function(name) {
if (!name %in% c("info", "raw")) {
sheet <- read_excel(path, name)
sheet <- sheet %>%
mutate(series_id = name) %>%
reorder(series_id, everything())
print(sheet)
}
}
lapply(sheet_names, processSheet)
processSheet <- function(name) {
if (!name %in% c("info", "raw")) {
sheet <- read_excel(path, name)
sheet <- sheet %>%
mutate(series_id = name) %>%
select(series_id, everything())
print(sheet)
}
}
lapply(sheet_names, processSheet)
sheet_names <- excel_sheets(path)
data_list <- list()
processSheet <- function(name) {
if (!name %in% c("info", "raw")) {
sheet <- read_excel(path, name)
sheet <- sheet %>%
mutate(series_id = name) %>%
select(series_id, everything())
data_list[[length(data_list) + 1]] <- sheet
}
}
lapply(sheet_names, processSheet)
df <- bind_rows(data_list)
length(data_list)
data_list[[1]] <- 1
data_list <- list()
processSheet <- function(name) {
if (!name %in% c("info", "raw")) {
sheet <- read_excel(path, name)
sheet <- sheet %>%
mutate(series_id = name) %>%
select(series_id, everything())
data_list[[length(data_list) + 1]] <- sheet
}
}
lapply(sheet_names, processSheet)
processSheet <- function(name) {
if (!name %in% c("info", "raw")) {
sheet <- read_excel(path, name)
sheet <- sheet %>%
mutate(series_id = name) %>%
select(series_id, everything())
data_list[[length(data_list) + 1]] <- sheet
}
}
lapply(sheet_names, processSheet)
processSheet <- function(name) {
if (!name %in% c("info", "raw")) {
sheet <- read_excel(path, name)
sheet <- sheet %>%
mutate(series_id = name) %>%
select(series_id, everything())
}
}
lapply(sheet_names, processSheet)
processSheet <- function(name) {
if (!name %in% c("info", "raw")) {
}
}
lapply(sheet_names, processSheet)
for (name in sheet_names) {
print(name)
}
data_list <- list()
for (name in sheet_names) {
if (!name %in% c("info", "raw")) {
sheet <- read_excel(path, name)
sheet <- sheet %>%
mutate(series_id = name) %>%
select(series_id, everything())
data_list[[length(data_list) + 1]] <- sheet
}
}
df <- bind_rows(data_list)
View(df)
library(readr)
write_csv(df, "data/data.csv")
library(googlesheets4)
read_sheet("https://docs.google.com/spreadsheets/d/1U6Cf_qEOhiR9AZqTqS3mbMF3zt2db48ZP5v3rkrAEJY/edit#gid=780868077")
gs4_deauth()
read_sheet("https://docs.google.com/spreadsheets/d/1U6Cf_qEOhiR9AZqTqS3mbMF3zt2db48ZP5v3rkrAEJY/edit#gid=780868077")
read_sheet("https://docs.google.com/spreadsheets/d/1y5dzvUFt_esSur820MTSp72-lp3IcGCIkou1p1-3ew0/edit#gid=0")
read_sheet("https://docs.google.com/spreadsheets/d/1y5dzvUFt_esSur820MTSp72-lp3IcGCIkou1p1-3ew0/edit#gid=0")
gs4_auth()
read_sheet("https://docs.google.com/spreadsheets/d/1y5dzvUFt_esSur820MTSp72-lp3IcGCIkou1p1-3ew0/edit#gid=0")
read_sheet("https://docs.google.com/spreadsheets/d/1U6Cf_qEOhiR9AZqTqS3mbMF3zt2db48ZP5v3rkrAEJY/edit#gid=780868077")
gs4_deauth()
read_sheet("https://docs.google.com/spreadsheets/d/1U6Cf_qEOhiR9AZqTqS3mbMF3zt2db48ZP5v3rkrAEJY/edit#gid=780868077")
read_sheet("https://docs.google.com/spreadsheets/d/1y5dzvUFt_esSur820MTSp72-lp3IcGCIkou1p1-3ew0/edit#gid=0")
read_sheet("https://docs.google.com/spreadsheets/d/1U6Cf_qEOhiR9AZqTqS3mbMF3zt2db48ZP5v3rkrAEJY/edit#gid=780868077")
gs4_auth()
read_sheet("https://docs.google.com/spreadsheets/d/1U6Cf_qEOhiR9AZqTqS3mbMF3zt2db48ZP5v3rkrAEJY/edit#gid=780868077")
read_sheet("https://docs.google.com/spreadsheets/d/1y5dzvUFt_esSur820MTSp72-lp3IcGCIkou1p1-3ew0/edit#gid=0")
gs4_auth()
read_sheet("https://docs.google.com/spreadsheets/d/1U6Cf_qEOhiR9AZqTqS3mbMF3zt2db48ZP5v3rkrAEJY/edit#gid=780868077")
sheet_names(url)
?sheet_names
url <- "https://docs.google.com/spreadsheets/d/1y5dzvUFt_esSur820MTSp72-lp3IcGCIkou1p1-3ew0/edit#gid=0"
sheet_names(url)
sheet_names <- sheet_names(url)
?read_sheet()
library(googlesheets4)
library(dplyr)
library(readr)
url <- "https://docs.google.com/spreadsheets/d/1y5dzvUFt_esSur820MTSp72-lp3IcGCIkou1p1-3ew0/edit#gid=0"
sheet_names <- sheet_names(url)
data_list <- list()
for (name in sheet_names) {
if (!name %in% c("meta", "raw")) {
sheet <- read_sheet(url, name)
sheet <- sheet %>%
mutate(series_id = name) %>%
select(series_id, everything())
data_list[[length(data_list) + 1]] <- sheet
}
}
df <- bind_rows(data_list)
View(df)
url <- "https://docs.google.com/spreadsheets/d/1gr3a5iZLIT6FmMS-scGfN9kn-h_qG0pB/edit#gid=1855850601"
sheet_names <- sheet_names(url)
url <- "https://docs.google.com/spreadsheets/d/1gr3a5iZLIT6FmMS-scGfN9kn-h_qG0pB/edit#gid=1855850601"
sheet_names <- sheet_names(url)
url <- "https://docs.google.com/spreadsheets/d/1gr3a5iZLIT6FmMS-scGfN9kn-h_qG0pB/edit#gid=1855850601"
sheet_names <- sheet_names(url)
url <- "https://docs.google.com/spreadsheets/d/1Z7ZWw21AFx_hJvl1K7ukyGovj1x6FLeENVnOSn3m8bI/edit#gid=205791856"
sheet_names <- sheet_names(url)
data_list <- list()
for (name in sheet_names) {
if (!name %in% c("meta", "raw")) {
sheet <- read_sheet(url, name)
sheet <- sheet %>%
mutate(series_id = name) %>%
select(series_id, everything())
data_list[[length(data_list) + 1]] <- sheet
}
}
df <- bind_rows(data_list)
write_csv(df, "data/data.csv")
View(df)
url <- "1Z7ZWw21AFx_hJvl1K7ukyGovj1x6FLeENVnOSn3m8bI"
sheet_names <- sheet_names(url)
data_list <- list()
for (name in sheet_names) {
if (!name %in% c("meta", "raw")) {
sheet <- read_sheet(url, name)
sheet <- sheet %>%
mutate(series_id = name) %>%
select(series_id, everything())
data_list[[length(data_list) + 1]] <- sheet
}
}
